# Nombre del workflow
name: CI Pipeline

# Define los eventos que activan el workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
#Invertir los pasos
# Define los jobs del workflow
jobs:
  # Job 1: Ejecutar tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Project Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest test_script_corrected.py

  # Job 2: Construcción de la aplicación (solo si el job 'test' pasa)
  build:
    runs-on: ubuntu-latest
    needs: test 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Python Environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Project Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Application
        run: |
          echo "Building the application..."
          python setup.py sdist bdist_wheel
          echo "Build complete!"
#Meter la calidad de código después de los tests